/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSymmetric(TreeNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
        
     if(root == null) return true;
     
     Queue<TreeNode> q1 = new LinkedList<TreeNode>();
     Queue<TreeNode> q2 = new LinkedList<TreeNode>();
     
     q1.add(root.left);
     q2.add(root.right);
     
     while(q1.size()!= 0 && q2.size()!= 0){
         TreeNode t1 = q1.poll();
         TreeNode t2 = q2.poll();
         
         if(t1==null && t2==null) continue;
         
         
         if(t1==null||t2==null||t1.val != t2.val) return false;
         
         q1.add(t1.right);
         q1.add(t1.left);
         q2.add(t2.left);
         q2.add(t2.right);
         
         
     }
     
     return true;
        
    }
}
